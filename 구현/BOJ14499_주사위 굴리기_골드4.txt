import java.io.*;
import java.util.*;

public class Main {

    static int N,M,a,b;
    static int[][] map;
    static int[] dx = {0,0,0,-1,1};
    static int[] dy = {0,1,-1,0,0};
    static int[] dice = new int[6];


    static void move(int x, int y, int d){

        int nx = x+dx[d];
        int ny = y+dy[d];
        if(!isIn(nx,ny)) return;
        int num = map[nx][ny];
        int[] tmp = new int[6];
        for(int i=0;i<6;i++){
            tmp[i] = dice[i];
        }
        switch(d){
            case 1:
                dice[0] = tmp[3]; dice[2] = tmp[0]; dice[3] = tmp[5]; dice[5] = tmp[2];
                break;
            case 2:
                dice[0] = tmp[2]; dice[2] = tmp[5]; dice[3] = tmp[0]; dice[5] = tmp[3];
                break;
            case 3:
                dice[0] = tmp[4]; dice[1] = tmp[0]; dice[4] = tmp[5]; dice[5] = tmp[1];
                break;
            case 4:
                dice[0] = tmp[1]; dice[1] = tmp[5]; dice[4] = tmp[0]; dice[5] = tmp[4];
                break;
        }
        if(num==0){
            map[nx][ny] = dice[5];
        }
        else{
            dice[5] = map[nx][ny];
            map[nx][ny] = 0;
        }
        a = nx;
        b = ny;
        System.out.println(dice[0]);
    }

    static boolean isIn(int x, int y){
        if(x<0||x>=N||y<0||y>=M) return false;
        return true;
    }

    public static void main(String[] args) throws IOException{

        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        st = new StringTokenizer(br.readLine());
        N = Integer.parseInt(st.nextToken());
        M = Integer.parseInt(st.nextToken());

        map = new int[N][M];
        a = Integer.parseInt(st.nextToken());
        b = Integer.parseInt(st.nextToken());
        int K = Integer.parseInt(st.nextToken());

        for(int i=0;i<N;i++){
            st = new StringTokenizer(br.readLine());
            for(int j=0;j<M;j++){
                map[i][j] = Integer.parseInt(st.nextToken());
            }
        }

        st = new StringTokenizer(br.readLine());
        for(int i=0;i<K;i++){
            int d = Integer.parseInt(st.nextToken());
            move(a,b,d);
        }


    }
}



