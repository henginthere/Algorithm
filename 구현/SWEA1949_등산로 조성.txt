import java.util.*;
import java.io.*;

public class Solution
{
    static int[][] map;
    static int[][] copy;
    static boolean[][] visited;
    static int T, N, K;
    static int[] dx = {-1,1,0,0};
    static int[] dy = {0,0,-1,1};
    static boolean flag = true;
    static int ans = 0;


    static void start(int x, int y, int k){
        ans = Math.max(ans,k);
        visited[x][y] = true;
        for(int d=0;d<4;d++){
            int nx = x + dx[d];
            int ny = y + dy[d];
            if(!isIn(nx,ny)) continue;
            if(!visited[nx][ny]){
                if(map[x][y]>map[nx][ny]){
                    start(nx,ny,k+1);
                }
                else{
                    if(map[nx][ny]-map[x][y]<K && flag) {
                        flag = false;
                        int tmp = map[nx][ny];
                        map[nx][ny]=map[x][y]-1;
                        start(nx,ny,k+1);
                        map[nx][ny]=tmp;
                        flag = true;
                    }
                }

            }
        }
        visited[x][y]=false;
    }

    static boolean isIn(int x, int y){
        if(x<0||x>=N||y<0||y>=N) return false;
        return true;
    }

    public static void main(String args[]) throws Exception
    {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st;

        T = Integer.parseInt(br.readLine());

        for(int tc=1;tc<=T;tc++){
            st = new StringTokenizer(br.readLine());
            N = Integer.parseInt(st.nextToken());
            K = Integer.parseInt(st.nextToken());
            map = new int[N][N];
            copy = new int[N][N];
            visited = new boolean[N][N];
            int s = 0;
            for(int i=0;i<N;i++){
                st = new StringTokenizer(br.readLine());
                for(int j=0;j<N;j++){
                    map[i][j] = Integer.parseInt(st.nextToken());
                    copy[i][j] = map[i][j];
                    if(s<map[i][j]) s = map[i][j];
                }
            }
            for(int i=0;i<N;i++){
                for(int j=0;j<N;j++){
                    if(map[i][j]==s){
                        start(i,j,1);
                    }
                }
            }

            System.out.println("#"+tc+" "+ans);
        }

    }
}